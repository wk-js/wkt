#!/usr/bin/env node
'use strict'

const Manager      = require('../lib/manager')
const { basename } = require('path')
const { Parser }   = require('wk-argv-parser')

const { result, errors } = Parser.command('boilerplate')

// --output, -o
.string('output', process.cwd())
.alias('output', [ 'o' ])

// --help, -h
.help()

// Parse arguments
.parse(process.argv.slice(2).join(' '))

if (result.params.help) {
  console.log(basename(__filename), result.config.help.description)
} else if (errors) {

  const errors_str = errors.map((err) => {
    return `${err.message} [missings: ${err.missings.join(', ')}]`
  }).join('\n')

  console.log(errors_str)

} else {

  result.config = null
  result.set( result.valid_params )

  const manager = new Manager( result.params )
  result.params._.forEach(bp => manager.add(bp))
  manager.execute()

  // const git = require('../lib/git')
  // const boilerplate = 'application_base'

  // git.sparsecheckout({
  //   tmp: `.tmp/${boilerplate}`,
  //   remote: `git@github.com:wk-js/boilerplates.git`,
  //   directory: `${boilerplate}`
  // })

}